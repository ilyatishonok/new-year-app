{"version":3,"sources":["config/index.js","selectors/getTimerSeconds.js","selectors/getTimerInterval.js","actions/timerActions.js","data/index.js","consts/names.js","actions/heroActions.js","reducers/activeHeroReducer.js","reducers/timerReducer.js","reducers/index.js","store/index.js","components/KeyForm/KeyForm.js","actions/keyFormActions.js","components/createGame.js","components/Games/KateGame/KateGame.js","components/Games/OlyaGame/OlyaGame.js","components/Games/LizaGame/LizaGame.js","components/Games/OlyaKGame/OlyaKGame.js","components/Game/Game.js","components/Game/styled.js","containers/Game/Game.js","components/Timer/Timer.js","containers/Timer/Timer.js","components/GameLayout/GameLayout.js","components/App/App.js","serviceWorker.js","index.js"],"names":["config","getTimerSeconds","state","timer","seconds","getTimerInterval","interval","startTimer","dispatch","getState","isIntervalAlreadyExist","localStorage","setItem","setInterval","stopTimer","type","payload","clearInterval","removeItem","secretKeys","0407","2305","1861","1998","stepsData","_stepsData","Object","defineProperty","handleSubmitOnStep","heroId","step","values","secretKey","SubmissionError","_error","handleSubmitOnEnter","newHeroId","initialState","currentHeroId","getItem","currentHeroStep","activeHeroReducer","arguments","length","undefined","action","objectSpread","isTimerTurnedOn","timerReducer","combineReducers","form","formReducer","plugin","keyForm","hero","middlewares","createLogger","thunk","store","createStore","rootReducer","applyMiddleware","apply","Error","styled","div","_templateObject","FlexButton","Button","_templateObject2","KeyForm","renderFields","fieldProps","input","label","required","_fieldProps$meta","meta","touched","error","color","react_default","a","createElement","FormControl_default","margin","fullWidth","InputLabel_default","style","htmlFor","Input_default","assign","placeholder","autoComplete","handleSubmit","_this","props","onSubmitForm","_this$props","this","pristine","submitting","noValidate","onSubmit","redux_form_es","name","component","disabled","Component","reduxForm","validate","errors","createGame","Description","_Component","_class","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","Fragment","components_KeyForm_KeyForm","_ref","reset","Text","role","aria-label","Poem","Player","url","playing","ResetButton","onClick","display","GameContent","Game_templateObject","Game","gameComponent","KateGame","OlyaKGame","OlyaGame","LizaGame","renderGame","styled_templateObject","styled_templateObject2","ReactPlayer","_templateObject3","_templateObject4","connect","TimerContainer","Timer_templateObject","Timer","secondsToLose","date","Date","setSeconds","formattedData","toISOString","substr","MiddlePaper","Paper","GameLayout_templateObject","Header","AppBar","GameLayout_templateObject2","GameLayout","position","containers_Timer_Timer","containers_Game_Game","GlobalStyle","createGlobalStyle","App_templateObject","App","es","components_GameLayout_GameLayout","lib_default","followMouse","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff2f9294.chunk.js","sourcesContent":["export default {\r\n    maxTimeInSeconds: 300,\r\n};","const getTimerSeconds = state => state.timer.seconds;\r\n\r\nexport default getTimerSeconds;","const getTimerInterval = state => state.timer.interval;\r\n\r\nexport default getTimerInterval;","import config from '../config';\r\nimport { getTimerInterval, getTimerSeconds } from '../selectors';\r\n\r\nexport const START_TIMER = 'START_TIMER';\r\nexport const STOP_TIMER = 'STOP_TIMER';\r\nexport const INCREMENT_TIMER = 'INCREMENT_TIMER';\r\n\r\nexport const startTimer = () => {\r\n    return (dispatch, getState) => {\r\n        const isIntervalAlreadyExist = getTimerInterval(getState());\r\n\r\n        localStorage.setItem('isTimerTurnedOn', true);\r\n\r\n        if (!isIntervalAlreadyExist) {\r\n            const interval = setInterval(() => {\r\n                const seconds = getTimerSeconds(getState());\r\n\r\n                if (config.maxTimeInSeconds <= seconds) {\r\n                    dispatch(stopTimer());\r\n                }\r\n    \r\n                localStorage.setItem('timerSeconds', seconds + 1);\r\n    \r\n                dispatch({type: INCREMENT_TIMER});\r\n            }, 1000);\r\n    \r\n            dispatch({\r\n                type: START_TIMER,\r\n                payload: {\r\n                    interval,\r\n                },\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const stopTimer = () => {\r\n    return (dispatch, getState) => {\r\n        clearInterval(getState().timer.interval);\r\n\r\n        localStorage.removeItem('isTimerTurnedOn');\r\n        \r\n        dispatch({type: STOP_TIMER});\r\n    }\r\n}","import { KATYA_ID, OLYA_ID, LIZA_ID, OLYAK_ID } from '../consts/names';\r\n\r\nexport const secretKeys = {\r\n    '0407': KATYA_ID,\r\n    '2305': OLYA_ID,\r\n    '1861': LIZA_ID,\r\n    '1998': OLYAK_ID,\r\n};\r\n\r\nexport const stepsData = {\r\n    [KATYA_ID]: ['3487', 'друзей', '3959', '3435'],\r\n    [OLYA_ID]: ['2332', 'похмелье', '4000', '0896'],\r\n    [LIZA_ID]: ['4632', 'Новый год', '4462', '3256'],\r\n    [OLYAK_ID]: ['affise', '71', '19', '1000'],\r\n};","export const KATYA_ID = 'KATYA_ID';\r\nexport const OLYA_ID = 'OLYA_ID';\r\nexport const LIZA_ID = 'LIZA_ID';\r\nexport const OLYAK_ID = 'OLYAK_ID';","import { SubmissionError } from 'redux-form';\r\nimport { startTimer, stopTimer } from './timerActions';\r\nimport { stepsData, secretKeys } from '../data';\r\n\r\nexport const SELECT_HERO = 'SELECT_HERO';\r\nexport const NEXT_STEP = 'NEXT_STEP';\r\nexport const RESET = 'RESET';\r\n\r\nexport const selectHero = heroId => ({\r\n    type: SELECT_HERO,\r\n    payload: {\r\n        heroId,\r\n    },\r\n});\r\n\r\nexport const nextStep = () => ({\r\n    type: NEXT_STEP,\r\n});\r\n\r\nexport const handleSubmitOnStep = (heroId, step) => {\r\n    return (values, dispatch) => {\r\n        const isKeyCorrect = stepsData[heroId][step - 1] === values.secretKey;\r\n\r\n        if (!isKeyCorrect) {\r\n            throw new SubmissionError({ _error: 'Неправильный секретный ключ!',  });\r\n        }\r\n\r\n        dispatch(nextStep());\r\n\r\n        if (step + 1 === 5) {\r\n            dispatch(stopTimer());\r\n        }\r\n    }\r\n}\r\n\r\nexport const handleSubmitOnEnter = (values, dispatch) => {\r\n    const newHeroId = secretKeys[values.secretKey];\r\n\r\n    if (!newHeroId) {\r\n        throw new SubmissionError({ _error: 'Неправильный секретный ключ!' });\r\n    }\r\n\r\n    dispatch(selectHero(newHeroId));\r\n    dispatch(startTimer());\r\n}\r\n\r\nexport const reset = () => ({\r\n    type: RESET,\r\n});","import { SELECT_HERO, NEXT_STEP, RESET } from \"../actions/heroActions\";\r\n\r\nconst currentHero = localStorage.getItem('currentHero');\r\nconst currentHeroStep = localStorage.getItem('currentHeroStep');\r\n\r\nconst initialState = {\r\n    currentHeroId: currentHero,\r\n    currentHeroStep: +currentHeroStep,\r\n};\r\n\r\nconst activeHeroReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SELECT_HERO:\r\n            localStorage.setItem('currentHero', action.payload.heroId);\r\n            localStorage.setItem('currentHeroStep', 1);\r\n\r\n            return { ...state, currentHeroId: action.payload.heroId, currentHeroStep: 1 };\r\n            \r\n        case NEXT_STEP:\r\n            localStorage.setItem('currentHeroStep', state.currentHeroStep + 1);\r\n\r\n            return { ...state, currentHeroStep: state.currentHeroStep + 1 };\r\n\r\n        case RESET:\r\n            localStorage.removeItem('currentHero');\r\n            localStorage.removeItem('currentHeroStep');\r\n            return { ...state, currentHeroStep: 0, currentHeroId: null };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default activeHeroReducer;","import { START_TIMER, STOP_TIMER, INCREMENT_TIMER } from '../actions/timerActions';\r\nimport { RESET } from '../actions/heroActions';\r\n\r\nconst timerSeconds = localStorage.getItem('timerSeconds');\r\nconst isTimerTurnedOn = localStorage.getItem('isTimerTurnedOn') === 'true' ? true : false;\r\n\r\nconst initialState = {\r\n    seconds: +timerSeconds,\r\n    isTimerTurnedOn: isTimerTurnedOn,\r\n    interval: null,\r\n};\r\n\r\nconst timerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case START_TIMER:      \r\n            return { ...state, interval: action.payload.interval, isTimerTurnedOn: true };\r\n\r\n        case STOP_TIMER:\r\n            return { ...state, interval: null, isTimerTurnedOn: false };\r\n\r\n        case INCREMENT_TIMER:\r\n            return { ...state, seconds: state.seconds + 1 };\r\n\r\n        case RESET:\r\n            localStorage.removeItem('timerSeconds');\r\n            localStorage.removeItem('isTimerTurnedOn');\r\n            return { ...state, seconds: 0, isTimerTurnedOn: false, interval: null };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default timerReducer;","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport activeHeroReducer from './activeHeroReducer';\r\nimport timerReducer from './timerReducer';\r\n\r\nexport default combineReducers({\r\n    form: formReducer.plugin({\r\n        keyForm: (state, action) => {\r\n            switch (action.type) {\r\n                case 'NEXT_STEP':\r\n                    return undefined;\r\n                default:\r\n                    return state;\r\n            }\r\n        }\r\n    }),\r\n    hero: activeHeroReducer,\r\n    timer: timerReducer,\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nconst logger = createLogger();\r\n\r\nconst middlewares = [thunk];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    middlewares.push(logger);\r\n}\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport styled from 'styled-components';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport { validate } from '../../actions/keyFormActions';\r\n\r\nconst Error = styled.div`\r\n    color: red;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst FlexButton = styled(Button)`\r\n    display: flex !important;\r\n    margin: auto !important;\r\n    margin-top: 10px !important;\r\n    background: green !important;\r\n    color: white !important;\r\n\r\n    &: hover {\r\n        background: darkgreen !important;\r\n    }\r\n    &:disabled {\r\n        background: gray !important;\r\n    }\r\n`;\r\n\r\nclass KeyForm extends Component {\r\n    renderFields = fieldProps => {\r\n        const { input, label, type, required, meta: { touched, error }} = fieldProps;\r\n        const color = touched && error ? 'red' : 'green';\r\n\r\n        return (\r\n            <FormControl margin=\"normal\" required={required} fullWidth>\r\n                <InputLabel style={{color: color}} htmlFor=\"login\">{label}</InputLabel>\r\n                <Input\r\n                    {...input}\r\n                    error={touched && !!error}\r\n                    type={type}\r\n                    placeholder={label}\r\n                    autoComplete=\"off\"\r\n                />\r\n                {touched && error && <Error>{error}</Error>}\r\n            </FormControl>\r\n        )\r\n    }\r\n\r\n    handleSubmit = (values, dispatch) => {\r\n        this.props.onSubmitForm(values, dispatch);\r\n    }\r\n\r\n    render() {\r\n        const { handleSubmit, pristine, submitting, label, error } = this.props;\r\n\r\n        return (\r\n            <form noValidate onSubmit={handleSubmit(this.handleSubmit)}>\r\n                <div>\r\n                    <Field \r\n                        name=\"secretKey\"\r\n                        required\r\n                        component={this.renderFields}\r\n                        type=\"text\"\r\n                        label={label || 'Введите секретный ключ'}\r\n                    />\r\n                </div>\r\n                {error && <Error>{error}</Error>}\r\n                <FlexButton type=\"submit\" disabled={pristine || submitting}>\r\n                    ОК\r\n                </FlexButton>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'keyForm',\r\n    validate,\r\n})(KeyForm);\r\n","export const validate = values => {\r\n    const errors = {};\r\n\r\n    if (!values.secretKey) {\r\n        errors.secretKey = 'Это поле обязательно!';\r\n    }\r\n\r\n    return errors;\r\n}","import React, { Component } from 'react';\r\nimport KeyForm from './KeyForm';\r\n\r\nconst createGame = (heroId, handleSubmit) => {\r\n    return Description => {\r\n        return class extends Component {\r\n            render() {\r\n                const { step } = this.props;\r\n                \r\n                return (\r\n                    <React.Fragment>\r\n                        <Description {...this.props} step={step} />\r\n                        { step !== 5 && <KeyForm onSubmitForm={handleSubmit(heroId, step)} />}\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default createGame;","import React from 'react';\r\nimport { Text, Poem, Player, ResetButton } from '../../Game';\r\nimport createGame  from '../../createGame';\r\nimport { KATYA_ID } from '../../../consts/names';\r\nimport { handleSubmitOnStep } from '../../../actions/heroActions';\r\n\r\nconst Description = ({ step, reset }) => {\r\n    if (step === 1) {\r\n        return (\r\n            <React.Fragment>\r\n                <Text>\r\n                    Хо-хо! Привет, Катя! Я Дед Мороз <span role=\"img\" aria-label=\"Santa\">🎅</span>! И пришел я сегодня к тебе не с пустыми руками! Надеюсь, ты хорошо себя вела целый год и готова получить свои подарки <span role=\"img\" aria-label=\"Gift\">🎁</span>.\r\n                </Text>\r\n                <Text>\r\n                    Учти, у тебя есть только 5 минут, чтобы закончить выполнение всех заданий и только после этого ты получишь подарок, о котором наверняка мечтала целый год.\r\n                </Text>\r\n                <Text>\r\n                    Но прежде, чем начать, ответь: что это за четыре цифры, которые ты сейчас ввела? Что они значат?\r\n                </Text>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    if (step === 2) {\r\n        return (\r\n            <React.Fragment>\r\n                <Text>А ты молодец, раз прошла дальше. Но это ещё не всё! Отгадай загадку, чтобы пройти  дальше:</Text>\r\n                <Poem>\r\n                    <p>Будем Новый год встречать,</p>\r\n                    <p>Петь, кружиться, танцевать.</p>\r\n                    <p>Чтобы было веселей,</p>\r\n                    <p>В гости позовем...</p>\r\n                </Poem>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    if (step === 3) {\r\n        return (\r\n            <Text>\r\n                Смотрю, ты решительно настроена на получение подарка <span role=\"img\" aria-label=\"Gift\">🎁</span>, но что-то ты давно не заглядывала в свою прикроватную тумбочку <span role=\"img\" aria-label=\"Bed\">🛌</span>, а там лежит отгадка к следующему шагу.\r\n            </Text>\r\n        );\r\n    }\r\n\r\n    if (step === 4) {\r\n        return (\r\n            <Text>\r\n                Я, конечно, настоящий Дед Мороз <span role=\"img\" aria-label=\"Santa\">🎅</span>, но я прежде всего представляю интересы Ильи и Оли <span role=\"img\" aria-label=\"Girt and Boy\">👫</span>, поэтому задание: назови Олю и Илью восьмью (по четыре на каждого) прилагательными, которые начинаются с первой буквы их имени.\r\n            </Text>\r\n        );\r\n    }\r\n\r\n    if (step === 5) {\r\n        return (\r\n            <React.Fragment>\r\n                <Text>\r\n                    Ты умница! Ты прошла все испытания и заслужила свой подарок <span role=\"img\" aria-label=\"Gift\">🎁</span>, но я что-то загрустил, поэтому хочу услышать песню в твоём исполнении!\r\n                </Text>\r\n                <Player url='https://www.youtube.com/watch?v=5ThBkBuUD1M' playing />\r\n                <ResetButton onClick={reset}>Главная страница</ResetButton>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default createGame(KATYA_ID, handleSubmitOnStep)(Description);","import React from 'react';\r\nimport { Text, Poem, Player, ResetButton } from '../../Game';\r\nimport createGame  from '../../createGame';\r\nimport { OLYA_ID } from '../../../consts/names';\r\nimport { handleSubmitOnStep } from '../../../actions/heroActions';\r\n\r\nconst Description = ({ step, reset }) => {\r\n    if (step === 1) {\r\n        return (\r\n            <React.Fragment>\r\n                <Text>\r\n                    Хо-хо! Привет, Олька Войкель! Ты уже, наверное, поняла, кто я <span role=\"img\" aria-label=\"Santa\">🎅</span>? Так вот сегодня я пришёл тебе вручить подарки <span role=\"img\" aria-label=\"Gift\">🎁</span> за то, что ты была такой хорошей девочкой весь прошедший год.\r\n                </Text>\r\n                <Text>\r\n                    Но ты не настолько отличилась от Катьки, чтобы не выполнять мои пожелания. Так что, вперёд! Твои 5 минут начались!\r\n                </Text>\r\n                <Text>\r\n                    Для того, чтобы продолжить, ответь: что это за четыре цифры, которые ты сейчас ввела? Что они значат?\r\n                </Text>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    if (step === 2) {\r\n        return (\r\n            <React.Fragment>\r\n                <Text>Неплохо-неплохо. Думал, ты не ответишь. А ну-ка, отгадай загадку:</Text>\r\n                <Poem>\r\n                    <p>Новый год — особый праздник.</p>\r\n                    <p>Полон радости, веселья,</p>\r\n                    <p>Детям он подарки дарит</p>\r\n                    <p>Взрослым же с утра —...</p>\r\n                </Poem>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    if (step === 3) {\r\n        return (\r\n            <Text>\r\n                Ого, а я смотрю, ты не только мазик сюда пришла поточить, но ещё и подарки <span role=\"img\" aria-label=\"Gift\">🎁</span> получить! Ладно-ладно. Найди следующий код под батареей в одной из комнат. Удачи ;)\r\n            </Text>\r\n        );\r\n    }\r\n\r\n    if (step === 4) {\r\n        return (\r\n            <Text>\r\n                Чтобы продолжить, скажи тост за своих лучших друзей: Олю и Илью <span role=\"img\" aria-label=\"Girt and Boy\">👫</span>, разумеется, и выпей рюмку махом!\r\n            </Text>\r\n        );\r\n    }\r\n\r\n    if (step === 5) {\r\n        return (\r\n            <React.Fragment>\r\n                <Text>\r\n                    Не надейся, что уйдёшь без песни!\r\n                </Text>\r\n                <Player url='https://www.youtube.com/watch?v=bqzbUFIO5Yo' playing />\r\n                <ResetButton onClick={reset}>Главная страница</ResetButton>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default createGame(OLYA_ID, handleSubmitOnStep)(Description);","import React from 'react';\r\nimport createGame  from '../../createGame';\r\nimport { Text, Poem, Player, ResetButton } from '../../Game';\r\nimport { LIZA_ID } from '../../../consts/names';\r\nimport { handleSubmitOnStep } from '../../../actions/heroActions';\r\n\r\nconst Description = ({ step, reset }) => {\r\n    if (step === 1) {\r\n        return (\r\n            <React.Fragment>\r\n                <Text>\r\n                    Хо-хо, Лизка <span role=\"img\" aria-label=\"Santa\">🎅</span>! Зря ты сюда зашла! Подарки  <span role=\"img\" aria-label=\"Gift\">🎁</span>- это, конечно, хорошо, но готова ли ты пройти мой НОВОГОДНЕ-ИСТОРИЧЕСКИЙ квест? Праздник-праздником, а об учёбе забывать не стоит. Я думаю, ты и сама это понимаешь.\r\n                </Text>\r\n                <Text>\r\n                    Так что это за число, которое ты сейчас ввела? Что оно означает?\r\n                </Text>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    if (step === 2) {\r\n        return (\r\n            <React.Fragment>\r\n                <Text>Ничего себе! Да ты шаришь! Но с загадкой можешь не справиться!</Text>\r\n                <Poem>\r\n                    <p>Невозможно не отметить</p>\r\n                    <p>Самый лучший на планете</p>\r\n                    <p>Праздник радостных хлопот —</p>\r\n                    <p>Развеселый...</p>\r\n                </Poem>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    if (step === 3) {\r\n        return (\r\n            <Text>\r\n                Эх, а куда же я дел следующий код? Возможно, на одном из зеркал найдёшь его!\r\n            </Text>\r\n        );\r\n    }\r\n\r\n    if (step === 4) {\r\n        return (\r\n            <Text>\r\n                Подойди да поблагодари своих друзей, Олю и Илью <span role=\"img\" aria-label=\"Girt and Boy\">👫</span>, за всё хорошее, что было в этом году. Да только скажи слово \"Спасибо\", как минимум, на 5 языках.\r\n            </Text>\r\n        );\r\n    }\r\n\r\n    if (step === 5) {\r\n        return (\r\n            <React.Fragment>\r\n                <Text>\r\n                    Ну спой ты уже, пожалуйста!\r\n                </Text>\r\n                <Player url='https://www.youtube.com/watch?v=7JPqDL5TMjE' playing />\r\n                <ResetButton onClick={reset}>Главная страница</ResetButton>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default createGame(LIZA_ID, handleSubmitOnStep)(Description);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Text, ResetButton } from '../../Game';\r\nimport createGame  from '../../createGame';\r\nimport { OLYAK_ID } from '../../../consts/names';\r\nimport { handleSubmitOnStep } from '../../../actions/heroActions';\r\n\r\nconst Description = ({ step, reset }) => {\r\n    if (step === 1) {\r\n        return (\r\n            <React.Fragment>\r\n                <Text>\r\n                    Хо-хо <span role=\"img\" aria-label=\"Santa\">🎅</span>! Привет, Олька! У меня и для тебя есть подарок <span role=\"img\" aria-label=\"Gift\">🎁</span>! Давай с тобой немного поиграем!\r\n                </Text>\r\n                <Text>\r\n                    Есть слово: \"<code>уышааф</code>\" - расшифруй его. Ты знаешь у кого спрашивать подсказки!\r\n                </Text>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    if (step === 2) {\r\n        return (\r\n            <Text>\r\n                Молодец! Поехали дальше! Где-то в этом доме есть место, где лежит \"сердце\" <span role=\"img\" aria-label=\"heart\">❤️</span>, а в этом \"сердце\" твой ключик.\r\n            </Text>\r\n        );\r\n    }\r\n\r\n    if (step === 3) {\r\n        return (\r\n            <React.Fragment>\r\n                <Text>\r\n                    Надеюсь ты запомнила код, который только что ввела. Он тебе сейчас пригодится <span aria-label=\"smile-face\" role=\"img\">😃</span>\r\n                </Text>\r\n                <Text>\r\n                    Найди среди вложений диалога с Ильей, фото под номером, который ты только что ввела.\r\n                </Text>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    if (step === 4) {\r\n        return (\r\n            <React.Fragment>\r\n                <Text>\r\n                    Молодец! Я записал твой следующий код тут <olyacode style={{display: 'none'}}>1000</olyacode>, но он почему-то не отобразился.\r\n                </Text> \r\n                <Text>\r\n                    Возможно, ты знаешь как его отобразить?\r\n                </Text>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    if (step === 5) {\r\n        return (\r\n            <React.Fragment>\r\n                <Text>\r\n                    Молодец! Иди в комнату Кати и Лизы и поищи подсказку на двери!\r\n                </Text>\r\n                <ResetButton onClick={reset}>Главная страница</ResetButton>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default createGame(OLYAK_ID, handleSubmitOnStep)(Description);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport KeyForm from '../KeyForm';\r\nimport { KateGame, OlyaGame, LizaGame, OlyaKGame } from '../Games';\r\nimport { handleSubmitOnEnter } from '../../actions/heroActions';\r\nimport { KATYA_ID, OLYA_ID, LIZA_ID, OLYAK_ID } from '../../consts/names';\r\n\r\nconst GameContent = styled.div`\r\n    padding: 30px;\r\n    overflow: auto;\r\n`;\r\n\r\nconst renderGame = props => {\r\n    const { heroId, step, reset } = props;\r\n    let gameComponent;\r\n\r\n    if (heroId === KATYA_ID) {\r\n        gameComponent = <KateGame step={step} reset={reset} />;\r\n    }\r\n\r\n    if (heroId === OLYAK_ID) {\r\n        gameComponent = <OlyaKGame step={step} reset={reset} />;\r\n    }\r\n\r\n    if (heroId === OLYA_ID) {\r\n        gameComponent = <OlyaGame step={step} reset={reset} />;\r\n    }\r\n\r\n    if (heroId === LIZA_ID) {\r\n        gameComponent = <LizaGame step={step} reset={reset} />;\r\n    }\r\n\r\n    return (\r\n        <GameContent>\r\n            {gameComponent}\r\n        </GameContent>\r\n    );\r\n}\r\n\r\nconst Game = props => {\r\n    const { heroId } = props;\r\n\r\n    if (!heroId) {\r\n        return (\r\n            <GameContent>\r\n                <KeyForm\r\n                    onSubmitForm={handleSubmitOnEnter}\r\n                />\r\n            </GameContent>\r\n        );\r\n    }\r\n\r\n    return renderGame(props);\r\n}\r\n\r\nGame.propTypes = {\r\n    heroId: PropTypes.string,\r\n    step: PropTypes.number.isRequired,\r\n    reset: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Game;","import styled from 'styled-components';\r\nimport Button from '@material-ui/core/Button';\r\nimport ReactPlayer from 'react-player';\r\n\r\nexport const Text = styled.div`\r\n    font-family: corbel;\r\n    text-indent: 1.5em;\r\n`;\r\n\r\nexport const Poem = styled.div`\r\n    font-style: italic;\r\n    text-align: center;\r\n    font-family: corbel;\r\n    line-height: 0.5em;\r\n`;\r\n\r\nexport const Player = styled(ReactPlayer)`\r\n    width: 100% !important;\r\n    margin-top: 40px;\r\n`;\r\n\r\nexport const ResetButton = styled(Button)`\r\n    display: flex !important;\r\n    margin: auto !important;\r\n    margin-top: 10px !important;\r\n    background: green !important;\r\n    color: white !important;\r\n\r\n    &: hover {\r\n        background: darkgreen !important;\r\n    }\r\n`;\r\n","import { connect } from 'react-redux';\r\nimport Game from '../../components/Game';\r\nimport { reset } from '../../actions/heroActions';\r\n\r\nconst mapStateToProps = state => ({\r\n    heroId: state.hero.currentHeroId,\r\n    step: state.hero.currentHeroStep,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    reset: () => dispatch(reset()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport config from '../../config';\r\n\r\nconst TimerContainer = styled.div``;\r\n\r\nexport default class Timer extends Component {\r\n    componentDidMount() {\r\n        const { startTimer, isTimerTurnedOn, interval } = this.props;\r\n\r\n        if (isTimerTurnedOn && !interval) {\r\n            startTimer();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { seconds } = this.props;\r\n\r\n        const secondsToLose = config.maxTimeInSeconds - seconds;\r\n\r\n        const date = new Date(null);\r\n        date.setSeconds(secondsToLose);\r\n\r\n        if (secondsToLose <= 0) {\r\n            return (\r\n                <TimerContainer>Время вышло, друг...</TimerContainer>\r\n            );\r\n        }\r\n\r\n        const formattedData = date.toISOString().substr(11, 8);\r\n\r\n        return (\r\n            <TimerContainer>{formattedData}</TimerContainer>\r\n        );\r\n    }\r\n\r\n    static propTypes = {\r\n        isTimerTurnedOn: PropTypes.bool.isRequired,\r\n        interval: PropTypes.number,\r\n        seconds: PropTypes.number.isRequired,\r\n        startTimer: PropTypes.func.isRequired,\r\n    }\r\n}","import { connect } from 'react-redux';\r\nimport Timer from '../../components/Timer';\r\nimport { startTimer } from '../../actions/timerActions';\r\n\r\nconst mapStateToProps = state => ({\r\n    seconds: state.timer.seconds,\r\n    isTimerTurnedOn: state.timer.isTimerTurnedOn,\r\n    interval: state.timer.interval,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    startTimer: () => dispatch(startTimer()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Game from '../../containers/Game';\r\nimport Timer from '../../containers/Timer';\r\n\r\nconst MiddlePaper = styled(Paper)`\r\n    margin-top: 10px;\r\n    margin-left: 300px;\r\n    margin-right: 300px;\r\n    border-radius: 10px !important;\r\n    box-shadow: 0 0 20px gold !important;\r\n    flex-grow: 1;\r\n\r\n    @media (max-width: 1094px) {\r\n        margin-left: 150px;\r\n        margin-right: 150px;\r\n    }\r\n\r\n    @media (max-width: 660px) {\r\n        margin-left: 50px;\r\n        margin-right: 50px;\r\n    }\r\n\r\n    @media (max-width: 330px) {\r\n        margin: 0px;\r\n    }\r\n`;\r\n\r\nconst Header = styled(AppBar)`\r\n    padding: 10px;\r\n    text-align: center;\r\n    font-style: sens-serif;\r\n    font-family: cursive;\r\n    font-size: 15px;\r\n`;\r\n\r\nconst GameLayout = () => {\r\n    return (\r\n        <MiddlePaper>\r\n            <Header position=\"static\" color=\"default\">\r\n                <Timer />\r\n            </Header>\r\n            <Game />\r\n        </MiddlePaper>\r\n    );\r\n}\r\n\r\nexport default GameLayout;","import React from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport SnowStorm from 'react-snowstorm';\r\nimport { Provider } from 'react-redux';\r\nimport store from '../../store';\r\nimport GameLayout from '../GameLayout';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    html, body {\r\n        margin: 0px;\r\n        padding: 0px;\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n\r\n    body {\r\n        background-image: url('./background.jpg');\r\n        background-repeat: no-repeat;\r\n        background-size: auto;\r\n    }\r\n\r\n    #root {\r\n        display: flex;\r\n    }\r\n`;\r\n\r\nconst App = () => (\r\n    <Provider store={store}>\r\n        <GlobalStyle />\r\n        <GameLayout />\r\n        <SnowStorm followMouse={false} />\r\n    </Provider>\r\n);\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}